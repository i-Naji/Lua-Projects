part of '../tdapi.dart';

class InputFile extends TdObject {
  /// Points to a file
  InputFile();

  /// a InputFile return type can be :
  /// * InputFileId
  /// * InputFileRemote
  /// * InputFileLocal
  /// * InputFileGenerated
  factory InputFile.fromJson(Map<String, dynamic> json) {
    switch (json["@type"]) {
      case InputFileId.CONSTRUCTOR:
        return InputFileId.fromJson(json);
      case InputFileRemote.CONSTRUCTOR:
        return InputFileRemote.fromJson(json);
      case InputFileLocal.CONSTRUCTOR:
        return InputFileLocal.fromJson(json);
      case InputFileGenerated.CONSTRUCTOR:
        return InputFileGenerated.fromJson(json);
      default:
        return InputFile();
    }
  }

  @override
  Map<String, dynamic> toJson() {
    return {};
  }

  static const CONSTRUCTOR = 'inputFile';

  @override
  String getConstructor() => CONSTRUCTOR;
}

class InputFileId extends InputFile {
  /// A file defined by its unique inputFileId
  InputFileId({required this.id});

  /// [id] Unique file identifier
  int id;

  /// Parse from a json
  factory InputFileId.fromJson(Map<String, dynamic> json) {
    return InputFileId(
      id: json['id'] ?? 0,
    );
  }

  @override
  Map<String, dynamic> toJson() {
    return {
      "@type": CONSTRUCTOR,
      "id": this.id,
    };
  }

  static const CONSTRUCTOR = 'inputFileId';

  @override
  String getConstructor() => CONSTRUCTOR;
}

class InputFileRemote extends InputFile {
  /// A file defined by its remote inputFileRemote. The remote inputFileRemote is guaranteed to be usable only if the corresponding file is still accessible to the user and known to TDLib.. For example, if the file is from a message, then the message must be not deleted and accessible to the user. If the file database is disabled, then the corresponding object with the file must be preloaded by the application
  InputFileRemote({required this.id});

  /// [id] Remote file identifier
  String id;

  /// Parse from a json
  factory InputFileRemote.fromJson(Map<String, dynamic> json) {
    return InputFileRemote(
      id: json['id'] ?? "",
    );
  }

  @override
  Map<String, dynamic> toJson() {
    return {
      "@type": CONSTRUCTOR,
      "id": this.id,
    };
  }

  static const CONSTRUCTOR = 'inputFileRemote';

  @override
  String getConstructor() => CONSTRUCTOR;
}

class InputFileLocal extends InputFile {
  /// A file defined by a local path
  InputFileLocal({required this.path});

  /// [path] Local path to the file
  String path;

  /// Parse from a json
  factory InputFileLocal.fromJson(Map<String, dynamic> json) {
    return InputFileLocal(
      path: json['path'] ?? "",
    );
  }

  @override
  Map<String, dynamic> toJson() {
    return {
      "@type": CONSTRUCTOR,
      "path": this.path,
    };
  }

  static const CONSTRUCTOR = 'inputFileLocal';

  @override
  String getConstructor() => CONSTRUCTOR;
}

class InputFileGenerated extends InputFile {
  /// A file generated by the application
  InputFileGenerated(
      {required this.originalPath,
      required this.conversion,
      required this.expectedSize});

  /// [originalPath] Local path to a file from which the file is generated; may be empty if there is no such file
  String originalPath;

  /// [conversion] String specifying the conversion applied to the original file; should be persistent across application restarts. Conversions beginning with '#' are reserved for internal TDLib usage
  String conversion;

  /// [expectedSize] Expected size of the generated file; 0 if unknown
  int expectedSize;

  /// Parse from a json
  factory InputFileGenerated.fromJson(Map<String, dynamic> json) {
    return InputFileGenerated(
      originalPath: json['original_path'] ?? "",
      conversion: json['conversion'] ?? "",
      expectedSize: json['expected_size'] ?? 0,
    );
  }

  @override
  Map<String, dynamic> toJson() {
    return {
      "@type": CONSTRUCTOR,
      "original_path": this.originalPath,
      "conversion": this.conversion,
      "expected_size": this.expectedSize,
    };
  }

  static const CONSTRUCTOR = 'inputFileGenerated';

  @override
  String getConstructor() => CONSTRUCTOR;
}
